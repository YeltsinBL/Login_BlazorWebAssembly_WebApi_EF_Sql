@page "/fetchdata"
@using LoginApplication.Shared
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<AuthorizeView>
    <Authorized>
        <p>This component demonstrates fetching data from the server.</p>

        @if (forecasts == null)
        {
            <p><em>@mensaje</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Temp. (C)</th>
                        <th>Temp. (F)</th>
                        <th>Summary</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var forecast in forecasts)
                    {
                        <tr>
                            <td>@forecast.Date.ToShortDateString()</td>
                            <td>@forecast.TemperatureC</td>
                            <td>@forecast.TemperatureF</td>
                            <td>@forecast.Summary</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </Authorized>
    <NotAuthorized>
        <p>No esta autorizado para este formulario</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter] // Permitir utilizar el AuthenticationState para verificar la autenticación
    public Task<AuthenticationState> AuthenticationState { get; set; }

    private WeatherForecast[]? forecasts;
    string mensaje = "Loading...";
    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthenticationState).User!;
        if (user.Identity!.IsAuthenticated)
        {
            var reponse = await Http.GetAsync("WeatherForecast");
            if (reponse.IsSuccessStatusCode)
            {
                forecasts = await reponse.Content.ReadFromJsonAsync<WeatherForecast[]>();
            }
            else
            {
                if(reponse.StatusCode!.GetHashCode() == 403)
                {
                    //mensaje = reponse.StatusCode!.ToString();
                    mensaje = "No esta autorizado para este contenido.";
                }
            }
        }
    }
}

